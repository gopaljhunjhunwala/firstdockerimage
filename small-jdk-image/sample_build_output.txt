dockerlearning@ubuntu:~/docker_learning/building_new_images/small-jdk-image$ docker build -t sampleserverapponly .
Sending build context to Docker daemon   2.56kB
Step 1/8 : FROM openjdk:8-jdk-alpine AS javajarcreator
 ---> a3562aa0b991
Step 2/8 : RUN mkdir /home/app; cd /home/app; wget https://raw.githubusercontent.com/gopaljhunjhunwala/SampleServerApp/master/src/github/gopal/SampleServerApp.java; mkdir -p src/github/gopal/ ; mkdir classes; mv SampleServerApp.java ./src/github/gopal/;javac -d classes src/github/gopal/SampleServerApp.java; cd classes; echo Main-Class: github.gopal.SampleServerApp >manifest.txt; jar cvfm SampleServerApp.jar manifest.txt github/gopal/SampleServerApp.class; mv SampleServerApp.jar ../ ; cd .. ; rm -rf ./src ; rm -rf ./classes;
 ---> Using cache
 ---> 5d83ec5ddd23
Step 3/8 : RUN ls /home/app
 ---> Using cache
 ---> 6b2493068178
Step 4/8 : RUN echo image build successfully
 ---> Using cache
 ---> db95debe83f8
Step 5/8 : FROM openjdk:8-jre-alpine
 ---> f7a292bbb70c
Step 6/8 : COPY --from=javajarcreator /home/app/SampleServerApp.jar /home/app/SampleServerApp.jar
 ---> Using cache
 ---> aaf4bc33711b
Step 7/8 : EXPOSE 8088
 ---> Using cache
 ---> 8aa1a4d9600b
Step 8/8 : ENTRYPOINT java -jar /home/app/SampleServerApp.jar
 ---> Using cache
 ---> 5d3061887dac
Successfully built 5d3061887dac
Successfully tagged sampleserverapponly:latest


